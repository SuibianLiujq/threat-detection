#!/usr/bin/env python
# -*- coding:utf8 -*-
import sys, os, time
import requests,re,pickle, datetime
from lxml import etree, html
# os.path.abspath(os.path.join(os.path.dirname(__file__),".."))
from store_json import *

def malwaredomains():
    url="https://mirror1.malwaredomains.com/files/domains.txt"
    try:
        http =requests.get(url=url, verify=False, timeout=120)     #发送http请求
    except Exception as e:
        return []

    neir = http.text                                     #获取http字符串代码
    # print neir
    lines = neir.split('\r\n')
    del lines[0:4]
    data = []
    # print len(lines)
    # results = []
    for line in lines:
        result = re.findall("\d{8}\t{2}\w+", line)
        if len(result) >=1:
            lineSpr = line.split('\t\t')
            del lineSpr[0]
            for lineSprEle in lineSpr:
                cleanLineSprEle = lineSprEle.split('\t')
                # print cleanLineSprEle
                data.append(cleanLineSprEle)
            # print lineSpr
        else:
            temp = line.split('\t')
            del temp[0:2]
            data.append(temp)

    return data

def screen_data():
    web_set = ['private','isc.sans.edu','abuse.ch','techhelplist.com','malwaredomainlist.com','malwaredomains.com']
    results = malwaredomains()
    if not results:
        return {}
    data = {}
    i = 0
    for temp in results:
        if not temp:
            continue
        i = i + 1
        for domain in web_set:
            if re.search(domain,temp[2]):
                data[temp[0]]={
                    'subtype':'malware',
                    'source':temp[2]
                }

    # print len(data)
    # blacklist_tools.json_stdout(data)
    return data


def main():
    ret_dict = screen_data()
    store_json(ret_dict,'malwaredomains')

# if __name__=="__main__":
#     dict = screen_data()
# #     store_json(dict,'malwaredomains')
#     print dict