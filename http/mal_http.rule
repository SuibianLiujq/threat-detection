import "security/ccbots/threat-detection/http/cfg/%(__sys_lang__)/mal_http.rule";
import "security/ccbots/threat-detection/http/cfg/source.rule";

def __searchhttp(list){
    sql = "
        SELECT
            url
        FROM
            'http-agg-*'
        WHERE
            last(%(__range__))
            AND ip_ranges(sip,$(__iprangelist__))
            AND url IN $(list)
        GROUP BY
            sip,url
       LIMIT
            25,2
    ";    
    res = query(sql);
    return res;
}

def __alert(list,args){
    __level__        = args["level"];
    __type__         = args["type"];
    __desc_type__    = args["desc_type"];
    __subtype__      = args["subtype"];
    __desc_subtype__ = args["desc_subtype"];

    item_set( list, "@timestamp", time("T"));
    return alert(list);
}

def __check_url(listRes,args){
    get_url = item_values(url_list,'url');
    new_hostlist = [];

    #将情报中的urllist聚合成一个list
    for item in get_url{
        new_hostlist = append_list(new_hostlist,item);
    }
    sip_list = __searchhttp(new_hostlist);
    #根据es中有问题的url查询sip，获取告警种类，情报源，告警
    agg_host_list = agg_items(sip_list,'url');
    for item in agg_host_list{
        source_info = has_kv(url_list,'url',item)[0];
        __alert_cfg__['subtype'] = source_info['type'];
        __alert_cfg__['desc_subtype'] = '[http]source: ' + source_info['source'];
        __alert(agg_host_list[item],__alert_cfg__);
    }
}

call_list([
    {"name":"__check_url",  "args":{}}
]);
